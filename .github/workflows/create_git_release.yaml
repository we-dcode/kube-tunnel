on:
  push:
    tags:
      - 'kubetunnel-cli-*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  create-release:
    name: Create Git Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: ncipollo/release-action@v1.11.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ secrets.GITHUB_REF_NAME }}
  releases-matrix:
    needs: [create-release]
    name: Create Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [darwin-amd64,darwin-arm64,windows-amd64,linux-amd64]
    steps:
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1.32
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          build_command: make ${{ matrix.os }}-cli
          binary_name: kubetunnel
          asset_name: kubetunnel-${{ secrets.GITHUB_REF_NAME }}-${{ matrix.os }}
          release_tag: ${{ secrets.GITHUB_REF_NAME }}
  homebrew-releaser:
    runs-on: ubuntu-latest
    needs: [releases-matrix]
    name: homebrew-releaser
    steps:
      - name: Release my project to my Homebrew tap
        uses: Justintime50/homebrew-releaser@v1
        with:
          # The name of the homebrew tap to publish your formula to as it appears on GitHub.
          # Required - strings.
          homebrew_owner: we-dcode
          homebrew_tap: homebrew-tap

          # The name of the folder in your homebrew tap where formula will be committed to.
          # Default is shown - string.
          formula_folder: formula

          # The GitHub Token (saved as a repo secret) that has `repo` permissions for the homebrew tap you want to release to.
          # Required - string.
          github_token: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}

          # Git author info used to commit to the homebrew tap.
          # Defaults are shown - strings.
          commit_owner: homebrew-releaser
          commit_email: homebrew-releaser@example.com

          # Custom dependencies in case other formulas are needed to build the current one.
          # Optional - multiline string.
          #          depends_on: |
          #            "bash" => :build
          #            "gcc"

          # Custom install command for your formula.
          # Required - string.
          install: 'bin.install "kubetunnel"'

          # Adds URL and checksum targets for different OS and architecture pairs. Using this option assumes 
          # a tar archive exists on your GitHub repo with the following URL pattern (this cannot be customized):
          # https://github.com/{GITHUB_OWNER}/{REPO_NAME}/releases/download/{TAG}/{REPO_NAME}-{VERSION}-{OPERATING_SYSTEM}-{ARCHITECTURE}.tar.gz'
          # Darwin AMD pre-existing path example: https://github.com/justintime50/myrepo/releases/download/v1.2.0/myrepo-1.2.0-darwin-amd64.tar.gz
          # Linux ARM pre-existing path example: https://github.com/justintime50/myrepo/releases/download/v1.2.0/myrepo-1.2.0-linux-arm64.tar.gz
          # Optional - booleans.

          target_darwin_amd64: true
          target_darwin_arm64: true
          target_linux_amd64: true


          # Update your homebrew tap's README with a table of all projects in the tap.
          # This is done by pulling the information from all your formula.rb files - eg:
          #
          # | Project                                    | Description  | Install                  |
          # | ------------------------------------------ | ------------ | ------------------------ |
          # | [formula_1](https://github.com/user/repo1) | helpful text | `brew install formula_1` |
          # | [formula_2](https://github.com/user/repo2) | helpful text | `brew install formula_2` |
          # | [formula_3](https://github.com/user/repo3) | helpful text | `brew install formula_3` |
          #
          # Simply place the following in your README or wrap your project in these comment tags:
          # <!-- project_table_start -->
          # TABLE HERE
          # <!--project_table_end -->
          #
          # Finally, mark `update_readme_table` as `true` in your GitHub Action config and we'll do the work of building a custom table for you.
          # Default is `false` - boolean.
          update_readme_table: false

          # Skips committing the generated formula to a homebrew tap (useful for local testing).
          # Default is shown - boolean.
          skip_commit: false

          # Logs debugging info to console.
          # Default is shown - boolean.
          debug: true
