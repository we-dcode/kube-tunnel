apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "kubetunnel.labels" . | nindent 4 }}
    kubetunnel-app: {{  .Values.env_service_name }}
    we-dcode-app: kubetunnel
    {{- range $key, $val := .Values.pod_labels }}
    {{ $key }}: {{ $val | quote }}
    {{- end}}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      kubetunnel-app: {{  .Values.env_service_name }}
      we-dcode-app: kubetunnel
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kubetunnel.labels" . | nindent 8 }}
        kubetunnel-app: {{  .Values.env_service_name }}
        we-dcode-app: kubetunnel
        meta.helm.sh/release-name:  {{ .Release.Name }}
        {{- range $key, $val := .Values.pod_labels }}
        {{ $key }}: {{ $val | quote }}
        {{- end}}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kubetunnel.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: kube-tunnel-server
          image: dcodetech/kubetunnel:1.1.4
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            periodSeconds: 1
            failureThreshold: 1

          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-env
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - mountPath: /etc/frp
              name: frp-conf
          ports:
            {{- range $k,$v := .Values.ports}}
            - name: {{$k}}
              containerPort: {{$v.port}}
              protocol: {{$v.protocol | default "TCP"}}
            {{- end}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: frp-conf
          secret:
            {{- if .Values.configSecretName}}
            secretName: {{.Values.configSecretName }}
            {{- else}}
            secretName: {{ .Release.Name }}-config
            {{- end}}
        - name: frp-health
          secret:
            {{- if .Values.configSecretName}}
            secretName: {{.Values.configSecretName }}
            {{- else}}
            secretName: {{ .Release.Name }}-health
            {{- end}}
            defaultMode: 0777
